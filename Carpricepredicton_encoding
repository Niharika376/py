{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/niha376/carprice-prediction?scriptVersionId=183926719\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"c0b9e8ff","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-06-17T06:55:06.120466Z","iopub.status.busy":"2024-06-17T06:55:06.120046Z","iopub.status.idle":"2024-06-17T06:55:07.244989Z","shell.execute_reply":"2024-06-17T06:55:07.24351Z"},"papermill":{"duration":1.136462,"end_time":"2024-06-17T06:55:07.247892","exception":false,"start_time":"2024-06-17T06:55:06.11143","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["/kaggle/input/carprice/carprice.csv\n"]}],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd\n","import matplotlib.pyplot as plt # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"code","execution_count":2,"id":"09d57db7","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:07.263551Z","iopub.status.busy":"2024-06-17T06:55:07.262968Z","iopub.status.idle":"2024-06-17T06:55:09.018659Z","shell.execute_reply":"2024-06-17T06:55:09.017242Z"},"papermill":{"duration":1.766958,"end_time":"2024-06-17T06:55:09.022029","exception":false,"start_time":"2024-06-17T06:55:07.255071","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn import linear_model\n","from sklearn.linear_model import LinearRegression\n","carmodel=LinearRegression()"]},{"cell_type":"code","execution_count":3,"id":"b4d35989","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:09.037474Z","iopub.status.busy":"2024-06-17T06:55:09.037017Z","iopub.status.idle":"2024-06-17T06:55:09.077953Z","shell.execute_reply":"2024-06-17T06:55:09.076721Z"},"papermill":{"duration":0.051816,"end_time":"2024-06-17T06:55:09.080742","exception":false,"start_time":"2024-06-17T06:55:09.028926","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Car model</th>\n","      <th>Mileage</th>\n","      <th>Sell Price($)</th>\n","      <th>Age(yrs)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BMW X5</td>\n","      <td>69000</td>\n","      <td>18000</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BMW X5</td>\n","      <td>35000</td>\n","      <td>34000</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BMW X5</td>\n","      <td>57000</td>\n","      <td>26100</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BMW X5</td>\n","      <td>22500</td>\n","      <td>40000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BMW X5</td>\n","      <td>46000</td>\n","      <td>31500</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Audi A5</td>\n","      <td>59000</td>\n","      <td>29400</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Audi A5</td>\n","      <td>52000</td>\n","      <td>32000</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Audi A5</td>\n","      <td>72000</td>\n","      <td>19300</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Audi A5</td>\n","      <td>91000</td>\n","      <td>12000</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Mercedez Benz C class</td>\n","      <td>67000</td>\n","      <td>22000</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Mercedez Benz C class</td>\n","      <td>83000</td>\n","      <td>20000</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Mercedez Benz C class</td>\n","      <td>79000</td>\n","      <td>21000</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Mercedez Benz C class</td>\n","      <td>59000</td>\n","      <td>33000</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                Car model  Mileage  Sell Price($)  Age(yrs)\n","0                  BMW X5    69000          18000         6\n","1                  BMW X5    35000          34000         3\n","2                  BMW X5    57000          26100         5\n","3                  BMW X5    22500          40000         2\n","4                  BMW X5    46000          31500         4\n","5                 Audi A5    59000          29400         5\n","6                 Audi A5    52000          32000         5\n","7                 Audi A5    72000          19300         6\n","8                 Audi A5    91000          12000         8\n","9   Mercedez Benz C class    67000          22000         6\n","10  Mercedez Benz C class    83000          20000         7\n","11  Mercedez Benz C class    79000          21000         7\n","12  Mercedez Benz C class    59000          33000         5"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["df = pd.read_csv(\"/kaggle/input/carprice/carprice.csv\")\n","df"]},{"cell_type":"code","execution_count":4,"id":"8e95c7f1","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:09.096232Z","iopub.status.busy":"2024-06-17T06:55:09.095786Z","iopub.status.idle":"2024-06-17T06:55:09.474436Z","shell.execute_reply":"2024-06-17T06:55:09.473268Z"},"papermill":{"duration":0.389648,"end_time":"2024-06-17T06:55:09.477224","exception":false,"start_time":"2024-06-17T06:55:09.087576","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["Text(0, 0.5, 'Selling Price')"]},"execution_count":4,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.scatter(df['Car model'], df['Sell Price($)'], marker='+')\n","plt.xlabel(\"Car Models\")\n","plt.ylabel(\"Selling Price\")"]},{"cell_type":"code","execution_count":5,"id":"e6c47bba","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:09.493983Z","iopub.status.busy":"2024-06-17T06:55:09.493559Z","iopub.status.idle":"2024-06-17T06:55:09.515611Z","shell.execute_reply":"2024-06-17T06:55:09.514154Z"},"papermill":{"duration":0.033435,"end_time":"2024-06-17T06:55:09.518096","exception":false,"start_time":"2024-06-17T06:55:09.484661","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Audi A5</th>\n","      <th>BMW X5</th>\n","      <th>Mercedez Benz C class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Audi A5  BMW X5  Mercedez Benz C class\n","0     False    True                  False\n","1     False    True                  False\n","2     False    True                  False\n","3     False    True                  False\n","4     False    True                  False\n","5      True   False                  False\n","6      True   False                  False\n","7      True   False                  False\n","8      True   False                  False\n","9     False   False                   True\n","10    False   False                   True\n","11    False   False                   True\n","12    False   False                   True"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["dummies=pd.get_dummies(df['Car model'])\n","dummies"]},{"cell_type":"code","execution_count":6,"id":"ca6af79e","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:09.536388Z","iopub.status.busy":"2024-06-17T06:55:09.534932Z","iopub.status.idle":"2024-06-17T06:55:09.553381Z","shell.execute_reply":"2024-06-17T06:55:09.552148Z"},"papermill":{"duration":0.030057,"end_time":"2024-06-17T06:55:09.555924","exception":false,"start_time":"2024-06-17T06:55:09.525867","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Car model</th>\n","      <th>Mileage</th>\n","      <th>Sell Price($)</th>\n","      <th>Age(yrs)</th>\n","      <th>Audi A5</th>\n","      <th>BMW X5</th>\n","      <th>Mercedez Benz C class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BMW X5</td>\n","      <td>69000</td>\n","      <td>18000</td>\n","      <td>6</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BMW X5</td>\n","      <td>35000</td>\n","      <td>34000</td>\n","      <td>3</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BMW X5</td>\n","      <td>57000</td>\n","      <td>26100</td>\n","      <td>5</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BMW X5</td>\n","      <td>22500</td>\n","      <td>40000</td>\n","      <td>2</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BMW X5</td>\n","      <td>46000</td>\n","      <td>31500</td>\n","      <td>4</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Audi A5</td>\n","      <td>59000</td>\n","      <td>29400</td>\n","      <td>5</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Audi A5</td>\n","      <td>52000</td>\n","      <td>32000</td>\n","      <td>5</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Audi A5</td>\n","      <td>72000</td>\n","      <td>19300</td>\n","      <td>6</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Audi A5</td>\n","      <td>91000</td>\n","      <td>12000</td>\n","      <td>8</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Mercedez Benz C class</td>\n","      <td>67000</td>\n","      <td>22000</td>\n","      <td>6</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Mercedez Benz C class</td>\n","      <td>83000</td>\n","      <td>20000</td>\n","      <td>7</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Mercedez Benz C class</td>\n","      <td>79000</td>\n","      <td>21000</td>\n","      <td>7</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Mercedez Benz C class</td>\n","      <td>59000</td>\n","      <td>33000</td>\n","      <td>5</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                Car model  Mileage  Sell Price($)  Age(yrs)  Audi A5  BMW X5  \\\n","0                  BMW X5    69000          18000         6    False    True   \n","1                  BMW X5    35000          34000         3    False    True   \n","2                  BMW X5    57000          26100         5    False    True   \n","3                  BMW X5    22500          40000         2    False    True   \n","4                  BMW X5    46000          31500         4    False    True   \n","5                 Audi A5    59000          29400         5     True   False   \n","6                 Audi A5    52000          32000         5     True   False   \n","7                 Audi A5    72000          19300         6     True   False   \n","8                 Audi A5    91000          12000         8     True   False   \n","9   Mercedez Benz C class    67000          22000         6    False   False   \n","10  Mercedez Benz C class    83000          20000         7    False   False   \n","11  Mercedez Benz C class    79000          21000         7    False   False   \n","12  Mercedez Benz C class    59000          33000         5    False   False   \n","\n","    Mercedez Benz C class  \n","0                   False  \n","1                   False  \n","2                   False  \n","3                   False  \n","4                   False  \n","5                   False  \n","6                   False  \n","7                   False  \n","8                   False  \n","9                    True  \n","10                   True  \n","11                   True  \n","12                   True  "]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["mergedf = pd.concat([df,dummies], axis =\"columns\")\n","mergedf"]},{"cell_type":"code","execution_count":7,"id":"063a6a12","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:09.573809Z","iopub.status.busy":"2024-06-17T06:55:09.573352Z","iopub.status.idle":"2024-06-17T06:55:09.588978Z","shell.execute_reply":"2024-06-17T06:55:09.587662Z"},"papermill":{"duration":0.027645,"end_time":"2024-06-17T06:55:09.59155","exception":false,"start_time":"2024-06-17T06:55:09.563905","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Mileage</th>\n","      <th>Sell Price($)</th>\n","      <th>Age(yrs)</th>\n","      <th>BMW X5</th>\n","      <th>Mercedez Benz C class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>69000</td>\n","      <td>18000</td>\n","      <td>6</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>35000</td>\n","      <td>34000</td>\n","      <td>3</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>57000</td>\n","      <td>26100</td>\n","      <td>5</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>22500</td>\n","      <td>40000</td>\n","      <td>2</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>46000</td>\n","      <td>31500</td>\n","      <td>4</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>59000</td>\n","      <td>29400</td>\n","      <td>5</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>52000</td>\n","      <td>32000</td>\n","      <td>5</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>72000</td>\n","      <td>19300</td>\n","      <td>6</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>91000</td>\n","      <td>12000</td>\n","      <td>8</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>67000</td>\n","      <td>22000</td>\n","      <td>6</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>83000</td>\n","      <td>20000</td>\n","      <td>7</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>79000</td>\n","      <td>21000</td>\n","      <td>7</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>59000</td>\n","      <td>33000</td>\n","      <td>5</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Mileage  Sell Price($)  Age(yrs)  BMW X5  Mercedez Benz C class\n","0     69000          18000         6    True                  False\n","1     35000          34000         3    True                  False\n","2     57000          26100         5    True                  False\n","3     22500          40000         2    True                  False\n","4     46000          31500         4    True                  False\n","5     59000          29400         5   False                  False\n","6     52000          32000         5   False                  False\n","7     72000          19300         6   False                  False\n","8     91000          12000         8   False                  False\n","9     67000          22000         6   False                   True\n","10    83000          20000         7   False                   True\n","11    79000          21000         7   False                   True\n","12    59000          33000         5   False                   True"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["finaldf = mergedf.drop(['Car model', 'Audi A5'], axis='columns')\n","finaldf"]},{"cell_type":"code","execution_count":8,"id":"a8b9b63f","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:09.610475Z","iopub.status.busy":"2024-06-17T06:55:09.610055Z","iopub.status.idle":"2024-06-17T06:55:09.625538Z","shell.execute_reply":"2024-06-17T06:55:09.62431Z"},"papermill":{"duration":0.028364,"end_time":"2024-06-17T06:55:09.628349","exception":false,"start_time":"2024-06-17T06:55:09.599985","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Mileage</th>\n","      <th>Age(yrs)</th>\n","      <th>BMW X5</th>\n","      <th>Mercedez Benz C class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>69000</td>\n","      <td>6</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>35000</td>\n","      <td>3</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>57000</td>\n","      <td>5</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>22500</td>\n","      <td>2</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>46000</td>\n","      <td>4</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>59000</td>\n","      <td>5</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>52000</td>\n","      <td>5</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>72000</td>\n","      <td>6</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>91000</td>\n","      <td>8</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>67000</td>\n","      <td>6</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>83000</td>\n","      <td>7</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>79000</td>\n","      <td>7</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>59000</td>\n","      <td>5</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    Mileage  Age(yrs)  BMW X5  Mercedez Benz C class\n","0     69000         6    True                  False\n","1     35000         3    True                  False\n","2     57000         5    True                  False\n","3     22500         2    True                  False\n","4     46000         4    True                  False\n","5     59000         5   False                  False\n","6     52000         5   False                  False\n","7     72000         6   False                  False\n","8     91000         8   False                  False\n","9     67000         6   False                   True\n","10    83000         7   False                   True\n","11    79000         7   False                   True\n","12    59000         5   False                   True"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["x= finaldf.drop([\"Sell Price($)\"], axis = \"columns\")\n","x"]},{"cell_type":"code","execution_count":9,"id":"ae96ce17","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:09.648458Z","iopub.status.busy":"2024-06-17T06:55:09.648028Z","iopub.status.idle":"2024-06-17T06:55:09.656707Z","shell.execute_reply":"2024-06-17T06:55:09.655401Z"},"papermill":{"duration":0.021504,"end_time":"2024-06-17T06:55:09.659275","exception":false,"start_time":"2024-06-17T06:55:09.637771","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["0     18000\n","1     34000\n","2     26100\n","3     40000\n","4     31500\n","5     29400\n","6     32000\n","7     19300\n","8     12000\n","9     22000\n","10    20000\n","11    21000\n","12    33000\n","Name: Sell Price($), dtype: int64"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["y=finaldf['Sell Price($)']\n","y"]},{"cell_type":"code","execution_count":10,"id":"c45126d2","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:09.68Z","iopub.status.busy":"2024-06-17T06:55:09.679562Z","iopub.status.idle":"2024-06-17T06:55:09.715274Z","shell.execute_reply":"2024-06-17T06:55:09.714039Z"},"papermill":{"duration":0.049555,"end_time":"2024-06-17T06:55:09.718385","exception":false,"start_time":"2024-06-17T06:55:09.66883","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"],"text/plain":["LinearRegression()"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["carmodel.fit(x,y)"]},{"cell_type":"markdown","id":"bb2b5e41","metadata":{"papermill":{"duration":0.008818,"end_time":"2024-06-17T06:55:09.736985","exception":false,"start_time":"2024-06-17T06:55:09.728167","status":"completed"},"tags":[]},"source":["**Price of Mercedez Benz C class with mileage 45000 and 4 years old**"]},{"cell_type":"code","execution_count":11,"id":"753fd5b9","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:09.757399Z","iopub.status.busy":"2024-06-17T06:55:09.756963Z","iopub.status.idle":"2024-06-17T06:55:09.769243Z","shell.execute_reply":"2024-06-17T06:55:09.767867Z"},"papermill":{"duration":0.02566,"end_time":"2024-06-17T06:55:09.771863","exception":false,"start_time":"2024-06-17T06:55:09.746203","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["array([36991.31721061])"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["test_data= {\n","    'Mileage' : [45000],\n","    'Age(yrs)': [4],\n","    'BMW X5'  : False,\n","    'Mercedez Benz C class': True\n","}\n","x_test=pd.DataFrame(test_data)\n","x_test\n","\n","carmodel.predict(x_test)"]},{"cell_type":"markdown","id":"6062f726","metadata":{"papermill":{"duration":0.009108,"end_time":"2024-06-17T06:55:09.790399","exception":false,"start_time":"2024-06-17T06:55:09.781291","status":"completed"},"tags":[]},"source":["**Price of BMW X5 with mileage 86000 and 7 yrs old**"]},{"cell_type":"code","execution_count":12,"id":"7b1f7d80","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:09.811339Z","iopub.status.busy":"2024-06-17T06:55:09.810939Z","iopub.status.idle":"2024-06-17T06:55:09.822746Z","shell.execute_reply":"2024-06-17T06:55:09.821634Z"},"papermill":{"duration":0.025375,"end_time":"2024-06-17T06:55:09.825316","exception":false,"start_time":"2024-06-17T06:55:09.799941","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["array([11080.74313219])"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["test_data= {\n","    'Mileage' : [86000],\n","    'Age(yrs)': [7],\n","    'BMW X5'  : True,\n","    'Mercedez Benz C class': False\n","}\n","x_test=pd.DataFrame(test_data)\n","\n","carmodel.predict(x_test)\n"," "]},{"cell_type":"markdown","id":"2d5a5ab9","metadata":{"papermill":{"duration":0.009664,"end_time":"2024-06-17T06:55:09.845969","exception":false,"start_time":"2024-06-17T06:55:09.836305","status":"completed"},"tags":[]},"source":["****Price of Audi A5 with mileage 25000 and 2 yrs old ******"]},{"cell_type":"code","execution_count":13,"id":"1625c0f3","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:09.867543Z","iopub.status.busy":"2024-06-17T06:55:09.867083Z","iopub.status.idle":"2024-06-17T06:55:09.879811Z","shell.execute_reply":"2024-06-17T06:55:09.878511Z"},"papermill":{"duration":0.026853,"end_time":"2024-06-17T06:55:09.882731","exception":false,"start_time":"2024-06-17T06:55:09.855878","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["array([44605.12561634])"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["test_data= {\n","    'Mileage' : [25000],\n","    'Age(yrs)': [2],\n","    'BMW X5'  : False,\n","    'Mercedez Benz C class': False\n","}\n","x_test=pd.DataFrame(test_data)\n","\n","carmodel.predict(x_test)\n"," "]},{"cell_type":"code","execution_count":14,"id":"2de5e0d6","metadata":{"execution":{"iopub.execute_input":"2024-06-17T06:55:09.905119Z","iopub.status.busy":"2024-06-17T06:55:09.904637Z","iopub.status.idle":"2024-06-17T06:55:09.917261Z","shell.execute_reply":"2024-06-17T06:55:09.915845Z"},"papermill":{"duration":0.027873,"end_time":"2024-06-17T06:55:09.920459","exception":false,"start_time":"2024-06-17T06:55:09.892586","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["0.9417050937281083"]},"execution_count":14,"metadata":{},"output_type":"execute_result"}],"source":["carmodel.score(x,y)"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":5224247,"sourceId":8709161,"sourceType":"datasetVersion"}],"dockerImageVersionId":30732,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":7.8928,"end_time":"2024-06-17T06:55:10.559484","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-06-17T06:55:02.666684","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}